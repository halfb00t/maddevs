// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main component should render correctly 1`] = `
<div>
  <section>
    <div
      id="case-first-section"
    />
     
    <section
      class="container_regular m-72_top media-m-38_top"
    >
      <p
        class="case_paragraph"
      >
        
    Veeqo is an inventory and shipping platform for e-commerce. It helps businesses to manage sales across multiple channels, ship items via multiple carriers, process refunds, manage B2B orders, forecast 
        <span
          class="case_no-wrap"
        >
          inventory—the
        </span>
         list of features is almost endless. The platform directly integrates with the world’s most popular retail applications, including e-commerce platforms, marketplaces, shipping carriers, POS systems, and more.
  
      </p>
       
      <textquote-stub
        class="m-auto m-96_top m-96_bottom media-m-48_top media-m-72_bottom"
      >
        
    Veeqo is a single platform that gives users complete control of their entire inventory. It enables businesses to quickly bulk ship orders from any sales channel, automate repetitive shipping tasks, and track every delivery in one place.
  
      </textquote-stub>
       
      <p
        class="case_paragraph case_text-align-center m-48_bottom"
      >
        
    Hundreds of retailers all over the world use Veeqo to power their inventory and shipping founded
  
      </p>
       
      <div
        class="m-96_bottom media-m-48_bottom case_statistics-container case_statistics-container-3"
      >
        <div
          class="case_statistics-item"
        >
          <p
            class="case_paragraph-uppercase case_statistics-item_title"
          >
            
    FOUNDED
  
          </p>
           
          <p
            class="case_statistics-item_number"
          >
            
    2013
  
          </p>
           
          <p
            class="case_statistics-item_description"
          >
            
    by experienced ecommerce retailer
  
          </p>
        </div>
        <div
          class="case_statistics-item"
        >
          <p
            class="case_paragraph-uppercase case_statistics-item_title"
          >
            
    OVER
  
          </p>
           
          <p
            class="case_statistics-item_number"
          >
            
    1.5bn
  
          </p>
           
          <p
            class="case_statistics-item_description"
          >
            
    inventory updates processed in Veeqo every year
  
          </p>
        </div>
        <div
          class="case_statistics-item"
        >
          <p
            class="case_paragraph-uppercase case_statistics-item_title"
          >
            
    OVER
  
          </p>
           
          <p
            class="case_statistics-item_number"
          >
            
    31m
  
          </p>
           
          <p
            class="case_statistics-item_description"
          >
            
    items picked, packed and shipped through annually
  
          </p>
        </div>
      </div>
    </section>
     
    <highleveloverview-stub />
     
    <section
      class="container_regular"
    >
      <h2
        class="case_title_h2 m-12_bottom"
      >
        
    Challenges and solutions
  
      </h2>
       
      <p
        class="case_paragraph"
      >
        
    In making Veeqo the reliable and efficient system it is today, our teams faced serious technical challenges. Addressing them required profound expertise, creative solutions, and intensive work. Particularly important were the contributions of our DevOps engineers.
  
      </p>
       
      <div
        class="case_quote-wrap m-48_top m-48_bottom media-m-24_top media-m-24_bottom m-auto"
      >
        <blockquote
          class="case_blockquote-box m-auto"
        >
          
    The role of DevOps specialists is to bring order and predictability to the development process: remove bottlenecks, simplify delivery, and automate as many processes as possible. The goal is to turn the development of features into a smoothly running conveyor belt.
  
        </blockquote>
         
        <!---->
      </div>
       
      <p
        class="case_paragraph m-96_bottom media-m-48_bottom"
      >
        
    When we joined the Veeqo project, our DevOps team started sorting out existing blockages in the development process, prioritizing those that affected Veeqo’s users and the client’s business the most.
  
      </p>
    </section>
     
    <phasefixingdatabaseoutages-stub />
     
    <section
      class="container_regular"
    >
      <h2
        class="case_title_h2 m-24_bottom"
      >
        
    Phase 2: Continuous integration (CI)
  
      </h2>
       
      <div
        class="colored-cards card-grid-type--two-two"
      >
        <div
          class="colored-card colored-card--1 background-color-silver"
        >
          <!---->
           
          <div
            class="colored-card__footer"
          >
            <!---->
             
            <h3
              class="colored-card__title case_title_h4 m-10_bottom media-m-8_bottom"
            >
              
      Challenge
    
            </h3>
             
            <p
              class="case_paragraph colored-card__description"
            >
              
        Development processes lacked consistency. Particularly, the project had manually configured CI system and pipelines, different development, test, and production environments and runtimes, non-reproducible development environment, inconsistent test builds.
      
            </p>
             
          </div>
        </div>
        <div
          class="colored-card colored-card--2 background-color-blue-light"
        >
          <!---->
           
          <div
            class="colored-card__footer"
          >
            <!---->
             
            <h3
              class="colored-card__title case_title_h4 m-10_bottom media-m-8_bottom"
            >
              
      Solution
    
            </h3>
             
            <p
              class="case_paragraph colored-card__description"
            >
              
        Dockerization is the most viable solution today to set up continuous delivery. As our application was back then partially hosted on Heroku, we created a unified runtime for developers and CI by dockerizing the main app using a Heroku Stack image and Docker Compose. It made CI reliable and allowed simplifying deployment. Also, it sped up bootstrapping of the development environment.
      
            </p>
             
          </div>
        </div>
      </div>
       
      <div
        class="case_quote-wrap m-48_top m-96_bottom media-m-24_top media-m-72_bottom m-auto"
      >
        <blockquote
          class="case_blockquote-box m-auto"
        >
          
    The developers didn’t trust their CI system. CI wasn’t helping them; it was hindering their work instead. It’s
    just bad DevOps.
  
        </blockquote>
         
        <p
          class="case_quote-author"
        >
          
    Andrew Sapozhnikov, Head of DevOps
  
        </p>
      </div>
       
      <h3
        class="case_title_h3 m-38_bottom media-m-24_bottom"
      >
        
    What we achieved
  
      </h3>
       
      <div
        class="case_achievements m-48_bottom media-m-24_bottom"
      >
        <p
          class="case_paragraph case_achievement-item"
        >
          
      Reproducible 
          <br />
           CI results
    
        </p>
         
        <p
          class="case_paragraph case_achievement-item"
        >
          
      Unified 
          <br />
           runtime
    
        </p>
         
        <p
          class="case_paragraph case_achievement-item"
        >
          
      Standardized development, test, and production environments
    
        </p>
      </div>
       
      <div
        class="case_ci-panel m-96_bottom media-m-48_bottom"
      >
        <picture-stub
          alt="CI Panel."
          extension="png"
          file="ci-panel"
          folder="veeqo"
          height="440"
          width="818"
        />
      </div>
       
      <h3
        class="case_title_h3 m-12_bottom"
      >
        
    Moving Jenkins
  
      </h3>
       
      <p
        class="case_paragraph m-34_bottom"
      >
        
    Jenkins was operated manually on a separate EC2 instance. Managing it was thus challenging, especially in
    emergencies. We moved the Jenkins master to ECS by remaking its provisioning, deployment, and updating (Later,
    we’ll move it to k8s, but in 2017, ECS was the only good option for us). We reduced build time and cost by
    allocating a small part of compute resources of Jenkins agents to reserved instances and moving 90% of the load to
    spot instances.
  
      </p>
       
      <p
        class="case_paragraph case_bold"
      >
        
    We further renovated CI by:
  
      </p>
       
      <ul
        class="case_list"
      >
        <li
          class="list-item_dot"
        >
          Creating Jenkinsfiles for all repositories thus making pipelines reproducible
        </li>
         
        <li
          class="list-item_dot"
        >
          Creating backups
        </li>
         
        <li
          class="list-item_dot"
        >
          Running access audit and configuring SSO for more secure access
        </li>
      </ul>
       
      <textquote-stub
        author="Maxim Glotov, DevOps Engineer"
        class="m-auto m-96_top m-96_bottom media-m-48_top media-m-72_bottom"
      >
        
    Everything down to the last comma is now written in the form of code. Even if we took Jenkins down completely and
    had to build it from scratch again, it’d take us no more than 10 minutes.
  
      </textquote-stub>
    </section>
     
    <continuousintegrationresult-stub />
     
    <section
      class="container_regular m-66_bottom media-m-48_bottom"
    >
      <h2
        class="case_title_h2 m-12_bottom"
      >
        
    Phase 3: Elasticsearch
  
      </h2>
       
      <p
        class="case_paragraph m-24_bottom"
      >
        
    Elasticsearch is crucial in the way users experience the Veeqo platform: the dashboard and the entire interface
    rely on Elasticsearch. Even if everything else functions flawlessly, delays in the search engine alone cause
    problems for user experience.
  
      </p>
       
      <div
        class="colored-cards m-96_bottom media-m-48_bottom card-grid-type--two-two"
      >
        <div
          class="colored-card colored-card--1 background-color-silver"
        >
          <!---->
           
          <div
            class="colored-card__footer"
          >
            <!---->
             
            <h3
              class="colored-card__title case_title_h4 m-10_bottom media-m-8_bottom"
            >
              
      Challenge
    
            </h3>
             
            <p
              class="case_paragraph colored-card__description"
            >
              
        Elasticsearch didn’t cope with the load due to its outdated version and non-optimized configurations.
      
            </p>
             
          </div>
        </div>
        <div
          class="colored-card colored-card--2 background-color-blue-light"
        >
          <!---->
           
          <div
            class="colored-card__footer"
          >
            <!---->
             
            <h3
              class="colored-card__title case_title_h4 m-10_bottom media-m-8_bottom"
            >
              
      Effect on users
    
            </h3>
             
            <p
              class="case_paragraph colored-card__description"
            >
              
        The users were often unable to access search results. Elasticsearch would expose them to delays of up to 30 seconds.
      
            </p>
             
          </div>
        </div>
      </div>
       
      <h3
        class="case_title_h4 m-8_bottom"
      >
        
    Solution
  
      </h3>
       
      <p
        class="case_paragraph m-24_bottom media-m-12_bottom"
      >
        
    There are two main ways to improve performance: Increase compute resources, Optimize the use of resources
  
      </p>
       
      <p
        class="case_paragraph m-34_bottom media-m-24_bottom"
      >
        
    At any given moment DevOps specialists calculate and evaluate cost factors of different solutions. We applied both
    types of solutions as we started with enhancing the cluster and later optimized indexing to make searching as
    convenient for users as possible.
  
      </p>
       
      <div
        class="case_cards-container"
      >
        <div
          class="case_card background-color-silver"
          style="padding: 24px;"
        >
          <h4
            class="case_title_h4 m-8_bottom"
          >
            
        New cluster
      
          </h4>
           
          <p
            class="case_paragraph m-32_bottom"
          >
            
        We implemented a new Elasticsearch cluster as a self-hosted solution on EC2 instances.
      
          </p>
           
          <p
            class="case_paragraph case_bold"
          >
            
        Three reasons:
      
          </p>
           
          <ul
            class="case_list"
          >
            <li
              class="list-item_dot"
            >
              Control over the security of our Elasticsearch
            </li>
             
            <li
              class="list-item_dot"
            >
              Immediate response in case of incidents
            </li>
             
            <li
              class="list-item_dot"
            >
              Independent monitoring and investigation of Elasticsearch performance
            </li>
          </ul>
        </div>
         
        <div
          class="case_card background-color-silver"
          style="padding: 24px;"
        >
          <h4
            class="case_title_h4 m-8_bottom"
          >
            
        Indexing and performance
      
          </h4>
           
          <p
            class="case_paragraph m-32_bottom"
          >
            
        The indices featured too much unnecessary information and non-optimized mapping.
      
          </p>
           
          <p
            class="case_paragraph case_bold"
          >
            
        What we did:
      
          </p>
           
          <ul
            class="case_list"
          >
            <li
              class="list-item_dot"
            >
              Refactored them to make them concise
            </li>
             
            <li
              class="list-item_dot"
            >
              
          Used the replication and sharding mechanisms to distribute the indices among five nodes
        
            </li>
          </ul>
        </div>
      </div>
    </section>
     
    <phaseelasticsearchresult-stub />
     
    <phasecuttingthecosts-stub />
     
    <div
      class="container_regular"
    >
      <h2
        class="case_title_h2 m-12_bottom"
      >
        
    Phase 5. Moving to Kubernetes
  
      </h2>
       
      <p
        class="case_paragraph m-72_bottom media-m-48_bottom"
      >
        
    Kubernetes and the team were ready for each other. Kubernetes was growing stable, well-integrated with all the major AWS services, and well-equipped for high production loads. The team, in turn, stabilized the development processes and needed better automation. Kubernetes provided a unified platform for app launching and Docker containers orchestration: we wanted to have a unified platform to safeguard Veeqo’s future growth. Having one platform to handle everything meant being independent of cloud providers and being able to launch instances in any clouds. We were going more cloud agnostic: Kubernetes allows moving workloads seamlessly.
  
      </p>
       
      <h3
        class="case_title_h3 m-12_bottom"
      >
        
    Use of resources
  
      </h3>
       
      <p
        class="case_paragraph"
      >
        
    There are four main types of resources: CPU, RAM, disc, and network. The way a service uses them depends on its type. Our objective was to arrange the services so that they don’t overlap in terms of the use of resources and—importantly—so that not too many resources are idle.
  
      </p>
       
      <div
        class="case_quote-wrap m-48_top m-48_bottom media-m-24_top media-m-24_bottom m-auto"
      >
        <blockquote
          class="case_blockquote-box m-auto"
        >
          
    There’s nothing more expensive than idle resources. At the same time, you don’t want to load the nodes to their maximum capacity because a) it’ll lead to performance degradation and b) you do need some idle resource to handle load spikes. Kubernetes finds balance.
  
        </blockquote>
         
        <p
          class="case_quote-author"
        >
          
    Andrew Sapozhnikov, Head of DevOps
  
        </p>
      </div>
       
      <p
        class="case_paragraph m-48_bottom"
      >
        
    The balance is found based on thorough continuous calculations. Kubernetes shuffles services from node to node so that resources are not overused and creates optimal distribution that a human admin could never possibly achieve manually.
  
      </p>
       
      <h3
        class="case_title_h3 m-12_bottom"
      >
        
    Kubernetes and containerization
  
      </h3>
       
      <p
        class="case_paragraph m-24_bottom media-m-12_bottom"
      >
        
    Kubernetes specializes in resource management and orchestration, but it needs a containerization service alongside it. We used Docker to standardize the runtime for application. The two worked perfectly together.
  
      </p>
       
      <p
        class="case_paragraph m-72_bottom media-m-24_bottom"
      >
        
    Kubernetes provides an environment where Ops and Devs can speak the same language: the language of YAML configurations and Kubernetes objects. We get system resources on one end, containers on the other, and in the middle, Kubernetes works its magic.
  
      </p>
    </div>
     
    <inventorychangelog-stub />
     
    <div
      class="container_regular"
    >
      <h2
        class="case_title_h2 m-12_bottom"
      >
        
    Phase 6: Infrastructure as Code (IaC)
  
      </h2>
       
      <p
        class="case_paragraph m-24_bottom"
      >
        
    IaC is a way to manage large structures where manual operation is highly ineffective or simply impossible. To go fully IaC, our teams made fundamental changes in the ways we develop, deliver, and maintain our solutions.
  
      </p>
       
      <h3
        class="case_title_h4 m-12_bottom"
      >
        
    Advantages of IaC
  
      </h3>
       
      <ol
        class="case_advantages-list"
      >
        <li
          class="case_advantages-item"
        >
          <span>
            Control over resources:
          </span>
           The more people have access to the cloud, the more expensive it is to use it. By introducing IaC, we rule out disorderly alterations in the system and prevent wastefulness, thus improving security and gaining firmer control over resources and costs.
    
        </li>
         
        <li
          class="case_advantages-item"
        >
          <span>
            Reproducibility:
          </span>
           IaC is the tool of ultimate reproducibility. By going straight to Terraform, one can avoid repetitive manual work, thus achieving: lower operating costs, higher speed, better coordination within the team, (ideally) fully automated infrastructure deployment.
    
        </li>
         
        <li
          class="case_advantages-item"
        >
          <span>
            Security:
          </span>
           Introduced changes can be tracked, reviewed, and analyzed automatically before delivery. It’s a reliable way to detect and fix vulnerabilities before they can make trouble.
    
        </li>
         
        <li
          class="case_advantages-item"
        >
          <span>
            Reliable documentation:
          </span>
           Documentation effectively stops being relevant once a new change is introduced into the system without being documented. With many changes going on, doc updates get easily forgotten. But if you have code for documentation, this problem is solved. There’s nothing more relevant for understanding a system than code itself. Ideally, what you have in master is what you have in production.
    
        </li>
      </ol>
       
      <textquote-stub
        class="m-auto m-96_top m-96_bottom media-m-48_top media-m-48_bottom"
      >
        
    We are proud of our work with Veeqo and eager to share our successes. As our partnership continues, we’re constantly looking for new ways to meet Veeqo’s business needs and make its users’ experience better.
  
      </textquote-stub>
    </div>
     
    <phasinfrastructureascoderesult-stub />
     
    <section
      class="container_regular"
    >
      <h2
        class="case_title_h2 case_text-align-center m-24_bottom media-m-12_bottom"
      >
        
    Technology stack
  
      </h2>
       
      <ul
        class="case_list-technologies m-96_bottom media-m-48_bottom"
      >
        <listtechnologiesitem-stub
          alt="Ruby"
          imgalt="Ruby Programming Language Logo."
          name="ruby"
        />
        <listtechnologiesitem-stub
          alt="NodeJS"
          imgalt="NodeJS Logo"
          name="node"
        />
        <listtechnologiesitem-stub
          alt="Elasticsearch"
          imgalt="Elasticsearch Logo."
          name="elastic"
        />
        <listtechnologiesitem-stub
          alt="PostgreSQL"
          imgalt="PostgreSQL Database Management System Logo."
          name="postgresql"
        />
        <listtechnologiesitem-stub
          alt="RebbitMQ"
          imgalt="RebbitMQ Message Broker Software Logo."
          name="rebbit-mq"
        />
        <listtechnologiesitem-stub
          alt="Redis"
          imgalt="Redis Data Structure Store Logo."
          name="redis"
        />
        <listtechnologiesitem-stub
          alt="Memcached"
          imgalt="Memcached Memory Caching System Logo."
          name="memcached"
        />
        <listtechnologiesitem-stub
          alt="Cloudwatch"
          imgalt="Cloudwatch Logo."
          name="cloud-watch"
        />
        <listtechnologiesitem-stub
          alt="Prometheus"
          imgalt="Prometheus Logo."
          name="prometheus"
        />
        <listtechnologiesitem-stub
          alt="Grafana"
          imgalt="Grafana Software Application Logo."
          name="grafana"
        />
        <listtechnologiesitem-stub
          alt="Sentry"
          imgalt="Sentry Error Tracking System Logo."
          name="sentry-black"
        />
        <listtechnologiesitem-stub
          alt="Heroku"
          imgalt="Heroku Cloud Platform Logo."
          name="heroku"
        />
        <listtechnologiesitem-stub
          alt="AWS"
          imgalt="AWS Cloud Computing Platforms Logo."
          name="aws"
        />
        <listtechnologiesitem-stub
          alt="Kubernetes"
          imgalt="Kubernetes Container Orchestration System Logo."
          name="kubernetes"
        />
        <listtechnologiesitem-stub
          alt="Terraform"
          imgalt="Terraform Infrastructure as Code Software Tool Logo."
          name="terraform"
        />
        <listtechnologiesitem-stub
          alt="Travis CI"
          imgalt="Travis CI Logo."
          name="travis-ci"
        />
        <listtechnologiesitem-stub
          alt="Jenkins"
          imgalt="Jenkins Logo."
          name="jenkins"
        />
        <listtechnologiesitem-stub
          alt="Docker"
          imgalt="Docker Logo."
          name="docker"
        />
        <listtechnologiesitem-stub
          alt="Helm"
          imgalt="Helm Logo."
          name="helm"
        />
      </ul>
    </section>
     
    <section
      class="container_regular m-72_bottom media-m-48_bottom"
    >
      <h2
        class="case_title_h2 case_title m-48_bottom media-m-24_bottom"
      >
        
    Meet the team
  
      </h2>
       
      <div
        class="case_team-list m-72_bottom media-m-48_bottom"
      >
        <li
          class="case_team-item"
        >
          <picture-stub
            alt="Maxim Glotov"
            background="true"
            class="case_team-item__image"
            extension="png"
            file="maxim-glotov"
            folder="common"
            height="50"
            width="50"
          />
           
          <div
            class="case_team-item__info"
          >
            <p
              class="case_team-item__name"
            >
              
      Maxim Glotov
    
            </p>
             
            <p
              class="case_team-item__position"
            >
              
      DevOps engineer
    
            </p>
          </div>
        </li>
        <li
          class="case_team-item"
        >
          <picture-stub
            alt="Andrew Sapozhnikov"
            background="true"
            class="case_team-item__image"
            extension="png"
            file="andrew-sapozhnikov"
            folder="common"
            height="50"
            width="50"
          />
           
          <div
            class="case_team-item__info"
          >
            <p
              class="case_team-item__name"
            >
              
      Andrew Sapozhnikov
    
            </p>
             
            <p
              class="case_team-item__position"
            >
              
      CIO
    
            </p>
          </div>
        </li>
      </div>
       
      <blockquote
        alt="Daniel Vartanov"
        class="case_blockquote-author m-auto case_text-align-center m-72_bottom p-48_top media-m-48_bottom"
      >
        
    The resource provided by Mad Devs is excellent, bringing not only their own skill and expertise, but the input of the wider team to the project too. They manage the remote work seamlessly and fit well into the company’s workflow.
   
        <div
          class="case_blockquote-author__author-info m-24_top"
        >
          <div
            class="case_blockquote-author__photo m-auto"
          >
            <picture-stub
              alt="Daniel Vartanov"
              extension="png"
              file="daniel-vartanov"
              folder="veeqo"
              height="71"
              width="71"
            />
          </div>
           
          <p
            class="case_paragraph case_blockquote-author__name"
          >
            
      Daniel Vartanov
    
          </p>
           
          <p
            class="case_blockquote-author__position"
          >
            
      CTO, Veeqo
    
          </p>
        </div>
      </blockquote>
    </section>
  </section>
</div>
`;
